{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Quickstart","href":"/docusaurus-template/","docId":"quickstart","unlisted":false},{"type":"category","label":"Developer Preview","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Connect to the Fluent Devnet","href":"/docusaurus-template/Developer Preview/Connect to the Fluent Devnet","docId":"Developer Preview/Connect to the Fluent Devnet","unlisted":false},{"type":"link","label":"Build with the Fluentbase SDK","href":"/docusaurus-template/Developer Preview/Build with the Fluentbase SDK","docId":"Developer Preview/Build with the Fluentbase SDK","unlisted":false}]},{"type":"category","label":"Developer Guides","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Developer Quickstart Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Solidity","href":"/docusaurus-template/Developer Guides/developer-quickstart-guides/solidity","docId":"Developer Guides/developer-quickstart-guides/solidity","unlisted":false},{"type":"link","label":"Rust","href":"/docusaurus-template/Developer Guides/developer-quickstart-guides/rust","docId":"Developer Guides/developer-quickstart-guides/rust","unlisted":false},{"type":"link","label":"Vyper","href":"/docusaurus-template/Developer Guides/developer-quickstart-guides/vyper","docId":"Developer Guides/developer-quickstart-guides/vyper","unlisted":false}]},{"type":"link","label":"Building a Blended App","href":"/docusaurus-template/Developer Guides/Building a Blended App","docId":"Developer Guides/Building a Blended App","unlisted":false}],"href":"/docusaurus-template/Developer Guides/"},{"type":"category","label":"Knowledge Base","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Fluent Overview","href":"/docusaurus-template/Knowledge Base/Fluent Overview","docId":"Knowledge Base/Fluent Overview","unlisted":false},{"type":"link","label":"The Fluent VM","href":"/docusaurus-template/Knowledge Base/The Fluent VM","docId":"Knowledge Base/The Fluent VM","unlisted":false},{"type":"link","label":"The Fluent L2 Network","href":"/docusaurus-template/Knowledge Base/The Fluent L2 Network","docId":"Knowledge Base/The Fluent L2 Network","unlisted":false},{"type":"link","label":"The Fluentbase Framework","href":"/docusaurus-template/Knowledge Base/The Fluentbase Framework","docId":"Knowledge Base/The Fluentbase Framework","unlisted":false}]},{"type":"category","label":"Resources","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Glossary","href":"/docusaurus-template/Resources/Glossary","docId":"Resources/Glossary","unlisted":false}]}]},"docs":{"Developer Guides/Building a Blended App":{"id":"Developer Guides/Building a Blended App","title":"Building a Blended App","description":"Introduction","sidebar":"tutorialSidebar"},"Developer Guides/developer-quickstart-guides/rust":{"id":"Developer Guides/developer-quickstart-guides/rust","title":"Rust","description":"For Rust smart contracts, any  no_std compatible crate (e.g., rand, alloc) can be used. Standard library crates are not supported. Verified libraries can be found on crates.io.&#x20;","sidebar":"tutorialSidebar"},"Developer Guides/developer-quickstart-guides/solidity":{"id":"Developer Guides/developer-quickstart-guides/solidity","title":"Solidity","description":"Prerequisites","sidebar":"tutorialSidebar"},"Developer Guides/developer-quickstart-guides/vyper":{"id":"Developer Guides/developer-quickstart-guides/vyper","title":"Vyper","description":"Prerequisites","sidebar":"tutorialSidebar"},"Developer Guides/README":{"id":"Developer Guides/README","title":"Building a Blended App","description":"---","sidebar":"tutorialSidebar"},"Developer Preview/Build with the Fluentbase SDK":{"id":"Developer Preview/Build with the Fluentbase SDK","title":"Build with the Fluentbase SDK","description":"---","sidebar":"tutorialSidebar"},"Developer Preview/Connect to the Fluent Devnet":{"id":"Developer Preview/Connect to the Fluent Devnet","title":"Connect to the Fluent Devnet","description":"---","sidebar":"tutorialSidebar"},"Knowledge Base/Fluent Overview":{"id":"Knowledge Base/Fluent Overview","title":"Fluent Overview","description":"Fluent is the first blended execution network. The project encompasses a zero-knowledge virtual machine (zkVM), Layer-2 network, and development framework for building diverse blockchain-based applications on Ethereum.&#x20;","sidebar":"tutorialSidebar"},"Knowledge Base/The Fluent L2 Network":{"id":"Knowledge Base/The Fluent L2 Network","title":"The Fluent L2 Network","description":"The Fluent L2 is a zk-rollup to run Wasm, EVM and SVM apps in one place. It supports blended execution of different VM targets on a shared state execution environment for real-time composability between apps from different ecosystems. The network is both EVM and SVM-compatible, maintaining ABI encodings for all contracts, and introducing no additional overhead for deploying apps in Solidity, Vyper, or Solana Rust.","sidebar":"tutorialSidebar"},"Knowledge Base/The Fluent VM":{"id":"Knowledge Base/The Fluent VM","title":"The Fluent VM","description":"The Fluent VM is a minimally modified version of the WebAssembly (Wasm) binary instruction format designed for verifiable applications. It is a reduced version of Wasm, called rWasm, which maintains compatibility with the original Wasm instruction set yet is optimized for zero-knowledge (zk) operations. Sections of the instruction set are embedded inside the binary, enhancing the efficiency and ease of verification of Wasm programs in a zk-rollup.","sidebar":"tutorialSidebar"},"Knowledge Base/The Fluentbase Framework":{"id":"Knowledge Base/The Fluentbase Framework","title":"The Fluentbase Framework","description":"The Fluentbase framework is used to deploy smart contracts on the Fluent L2 as well as blockchains and verifiable compute environments that compile to rWasm. It introduces an SDK and a proving system for the Fluent state transition function (STF). It is the basis for the Fluent L2 and can used to build:","sidebar":"tutorialSidebar"},"quickstart":{"id":"quickstart","title":"Quickstart","description":"---","sidebar":"tutorialSidebar"},"Resources/Glossary":{"id":"Resources/Glossary","title":"Glossary","description":"---","sidebar":"tutorialSidebar"}}}}