"use strict";(self.webpackChunkshardeum_docs=self.webpackChunkshardeum_docs||[]).push([[7959],{6081:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"smartContracts/deploy/foundry","title":"Foundry","description":"Foundry is a fast testing and deployment tool for developing EVM smart contracts.","source":"@site/docs/smartContracts/deploy/foundry.md","sourceDirName":"smartContracts/deploy","slug":"/smartContracts/deploy/foundry","permalink":"/docusaurus-template/smartContracts/deploy/foundry","draft":false,"unlisted":false,"editUrl":"https://github.com/Shardeum/shardeum-docs/tree/master/docs/smartContracts/deploy/foundry.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Foundry","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Remix IDE","permalink":"/docusaurus-template/smartContracts/deploy/remix"},"next":{"title":"Hardhat","permalink":"/docusaurus-template/smartContracts/deploy/hardhat"}}');var a=t(4848),s=t(8453),l=t(1470),o=t(9365);const i={title:"Foundry",sidebar_position:2},c=void 0,d={},u=[{value:"Installing Foundry",id:"installing-foundry",level:2},{value:"Creating a Foundry Project",id:"creating-a-foundry-project",level:2},{value:"Develop Contract",id:"develop-contract",level:2},{value:"Test contract",id:"test-contract",level:2},{value:"General Test Fast",id:"general-test-fast",level:2},{value:"Specific Test Case Log",id:"specific-test-case-log",level:2},{value:"General Test Coverage Percentage",id:"general-test-coverage-percentage",level:2},{value:"Fork Network General Test Coverage Percentage",id:"fork-network-general-test-coverage-percentage",level:2},{value:"Fork Networks using Anvil and Metamask",id:"fork-networks-using-anvil-and-metamask",level:2},{value:"Deploy to Goerli with EIP-1559 and verify with Etherscan",id:"deploy-to-goerli-with-eip-1559-and-verify-with-etherscan",level:2},{value:"Deploying to Shardeum Liberty with Legacy Transaction",id:"deploying-to-shardeum-liberty-with-legacy-transaction",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Foundry is a fast testing and deployment tool for developing EVM smart contracts.\nTests are written in Solidity to keep the workflow consistent with smart contract development and testing before deployments."}),"\n",(0,a.jsxs)(n.p,{children:["Foundry is written in Rust:\n",(0,a.jsx)(n.a,{href:"https://github.com/foundry-rs/foundry",children:"https://github.com/foundry-rs/foundry"})]}),"\n",(0,a.jsxs)(n.p,{children:["Paradigm supports Foundry:\n",(0,a.jsx)(n.a,{href:"https://www.paradigm.xyz/2021/12/introducing-the-foundry-ethereum-development-toolbox",children:"https://www.paradigm.xyz/2021/12/introducing-the-foundry-ethereum-development-toolbox"})]}),"\n",(0,a.jsx)(n.h2,{id:"installing-foundry",children:"Installing Foundry"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Install"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"foundryup\n"})}),"\n",(0,a.jsx)(n.p,{children:"with the Foundry toolchain installer:"}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"shell",label:"Shell",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"curl -L https://foundry.paradigm.xyz | bash\n"})})})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Close your terminal."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Open a new terminal."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Install Foundry by running:"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"shell",label:"Shell",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"foundryup\n"})})})}),"\n",(0,a.jsx)(n.p,{children:"If this installation method does not work,\nor you would like to install Foundry a different way, see other installation methods in Foundry's README:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/foundry-rs/foundry#installation",children:"https://github.com/foundry-rs/foundry#installation"})}),"\n",(0,a.jsx)(n.h2,{id:"creating-a-foundry-project",children:"Creating a Foundry Project"}),"\n",(0,a.jsx)(n.p,{children:"Here is a popular Foundry project to get started with:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/paulrberg/foundry-template",children:"https://github.com/paulrberg/foundry-template"})}),"\n",(0,a.jsx)(n.p,{children:"This document will be using development and test contracts from:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/MarcusWentz/foundry-testing",children:"https://github.com/MarcusWentz/foundry-testing"})}),"\n",(0,a.jsx)(n.p,{children:"In the same directory where you installed Foundry run:"}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"shell",label:"Shell",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"foundry test\n"})})})}),"\n",(0,a.jsx)(n.p,{children:"You should see all tests pass if you have installed and downloaded these example projects correctly."}),"\n",(0,a.jsx)(n.h2,{id:"develop-contract",children:"Develop Contract"}),"\n",(0,a.jsxs)(n.p,{children:["Development contract for testing ",(0,a.jsx)(n.code,{children:"src/Contract.sol"})," is called ",(0,a.jsx)(n.code,{children:"SimpleStorage"})," for this example:"]}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"solidiy",label:"Solidity",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\nerror sameStorageValue();\nerror notOwner();\nerror msgValueZero();\n\ncontract SimpleStorage {\n\n    uint  public storedData;  //Do not set 0 manually it wastes gas!\n    uint  public ownerUnixTimeContract;\n    address public immutable owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    event setOpenDataEvent(address indexed user, uint newValue); //Topics and other event arguments used for Foundry testing. Event arguments like this use gas in production so be careful.\n    event setOwnerDataEvent(uint newOwnerUnixTime);\n    event donateToOwnerEvent();\n\n    function set(uint x) public {\n        if(storedData == x) { revert sameStorageValue(); }        \n        storedData = x;\n        emit setOpenDataEvent(msg.sender, x); //Topic 1 (user) and other argument not indexed (newValue) for Foundry.\n    }\n\n    function setOwnerData() public {\n        if(msg.sender != owner) { revert notOwner(); }        \n        ownerUnixTimeContract = block.timestamp;\n        emit setOwnerDataEvent(block.timestamp);\n    }\n\n    function donateToOwner() public payable {\n        if(msg.value == 0) { revert msgValueZero(); }        \n        payable(owner).transfer(address(this).balance);\n        emit donateToOwnerEvent();\n    }\n\n}\n"})})})}),"\n",(0,a.jsx)(n.h2,{id:"test-contract",children:"Test contract"}),"\n",(0,a.jsxs)(n.p,{children:["Here we have a test contract which will test ",(0,a.jsx)(n.code,{children:"SimpleStorage"})," located in ",(0,a.jsx)(n.code,{children:"test/Contract.t.sol"})," called ",(0,a.jsx)(n.code,{children:"TestContract"}),":"]}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"solidiy",label:"Solidity",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:'// SPDX-License-Identifier: Unlicense\npragma solidity 0.8.7;\n\nimport "forge-std/Test.sol";\n\nimport "src/Contract.sol";\n\ncontract TestContract is Test {\n\n    //Functions fallback and receive used when the test contract is sent msg.value to prevent the test from reverting.\n    fallback() external payable {}     // Fallback function is called when msg.data is not empty\n    receive() external payable {}      // Function to receive Ether. msg.data must be empty\n\n    //Define events here from other contracts since Foundry has trouble importing events from other contracts still.\n    event setOpenDataEvent(address indexed user, uint newValue);\n    event setOwnerDataEvent(uint newOwnerUnixTime);\n    event donateToOwnerEvent();\n\n    SimpleStorage simpleStorageInstance;\n\n    function setUp() public {\n        simpleStorageInstance = new SimpleStorage();\n    }\n\n    function testInitialStorage() public {\n        assertEq(simpleStorageInstance.storedData(),0);\n        assertEq(simpleStorageInstance.ownerUnixTimeContract(),0);\n        assertEq(simpleStorageInstance.owner(),address(this));\n    }\n\n    function testSetValidPath() public {\n        assertEq(simpleStorageInstance.storedData(),0);\n        vm.expectEmit(true,false,false,true); // Events have bool flags for indexed topic parameters in order (3 topics possible) along with arguments that might not be indexed (last flag). You can also check which address sent the event.\n        emit setOpenDataEvent(address(this),1);\n        simpleStorageInstance.set(1);\n        assertEq(simpleStorageInstance.storedData(),1);\n    }\n\n    function testSetRevertPath() public {\n        assertEq(simpleStorageInstance.storedData(),0);\n        vm.expectRevert(sameStorageValue.selector);    //Revert if the new value matches the current storage value. Custom error from SimpleStorage.\n        simpleStorageInstance.set(0);\n        assertEq(simpleStorageInstance.storedData(),0);\n    }\n\n    function testSetOwnerDataValidPath() public {\n        assertEq(address(this),simpleStorageInstance.owner());\n        assertEq(simpleStorageInstance.ownerUnixTimeContract(),0);\n        vm.expectEmit(false,false,false,true); // Events have bool flags for indexed topic parameters in order (3 topics possible) along with arguments that might not be indexed (last flag). You can also check which address sent the event.\n        emit setOwnerDataEvent(10);\n        vm.warp(10);   //Increase block.timestamp by 10 seconds.\n        simpleStorageInstance.setOwnerData();\n        assertEq(simpleStorageInstance.ownerUnixTimeContract(),10);\n    }\n\n    function testSetOwnerDataRevertPath() public {\n        vm.startPrank(address(0)); //Change the address to not be the owner. The owner is address(this) in this context.\n        assertEq(simpleStorageInstance.ownerUnixTimeContract(),0);\n        vm.expectRevert(notOwner.selector);    //Revert if not the owner. Custom error from SimpleStorage.\n        simpleStorageInstance.setOwnerData();\n    }\n\n    function testDonateToOwnerValidPath() public {\n        uint ownerBalanceStart = address(this).balance;\n        assertEq(ownerBalanceStart,79228162514264337593543950335);\n        vm.deal(address(0),ownerBalanceStart);\n        uint prankBalanceStart = address(this).balance;\n        assertEq(ownerBalanceStart,79228162514264337593543950335);\n        assertEq(address(simpleStorageInstance).balance, 0);\n        vm.startPrank(address(0)); //Change the address to not be the owner. The owner is address(this) in this context.\n        uint msgValueWei = 1;\n        vm.expectEmit(false,false,false,false); // Events have bool flags for indexed topic parameters in order (3 topics possible) along with arguments that might not be indexed (last flag). You can also check which address sent the event.\n        emit donateToOwnerEvent();\n        assertEq(address(simpleStorageInstance).balance, 0);        \n        simpleStorageInstance.donateToOwner{value: msgValueWei}();\n        vm.stopPrank(); //Stop prank since we don\'t need to be another address anymore for increasing the owner balance from a transfer.\n        assertEq(address(simpleStorageInstance).balance, 0);\n        assertEq(address(this).balance, ownerBalanceStart+1);\n        assertEq(address(0).balance, prankBalanceStart-1);\n    }\n\n    function testDonateToOwnerRevertPath() public {\n        vm.expectRevert(msgValueZero.selector);  //Revert if MSG.VALUE is 0. Custom error from SimpleStorage.\n        simpleStorageInstance.donateToOwner();   //MSG.VALUE is not set for call, so it is 0.\n    }\n}\n'})})})}),"\n",(0,a.jsx)(n.h2,{id:"general-test-fast",children:"General Test Fast"}),"\n",(0,a.jsx)(n.p,{children:"Once you have a development and test contract setup, run a quick test with:"}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"shell",label:"Shell",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"forge test\n"})})})}),"\n",(0,a.jsx)(n.h2,{id:"specific-test-case-log",children:"Specific Test Case Log"}),"\n",(0,a.jsx)(n.p,{children:"If you want a detailed overview of how a specific test failed or passed, add a match test add verbosity flag."}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"The more v characters you add to the verbosity flag, the more detailed the test report will be."})}),"\n",(0,a.jsxs)(n.p,{children:["The example below has level 4 verbosity for the match test contract function ",(0,a.jsx)(n.code,{children:"testDonateToOwnerValidPath"}),":"]}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"shell",label:"Shell",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"forge test -vvvv -match-test testDonateToOwnerValidPath\n"})})})}),"\n",(0,a.jsx)(n.h2,{id:"general-test-coverage-percentage",children:"General Test Coverage Percentage"}),"\n",(0,a.jsx)(n.p,{children:"If you want to see how many lines and branches you are hitting with all tests:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Run"}),"\n"]}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"shell",label:"Shell",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"forge coverage --report lcov && genhtml lcov.info -o report --branch-coverage\n"})})})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Check coverage results in"}),"\n",(0,a.jsx)(n.p,{children:"report/index.html"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The coverage report should look like this in your web browser:\n",(0,a.jsx)(n.img,{alt:"foundryCoverageLCOV",src:t(6722).A+"",width:"1920",height:"1080"})]}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Delete the following before pushing to GitHub to keep commits lightweight:"}),"\n",(0,a.jsx)(n.p,{children:"lcov.info\nreports"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"fork-network-general-test-coverage-percentage",children:"Fork Network General Test Coverage Percentage"}),"\n",(0,a.jsxs)(n.p,{children:["The test coverage above uses a local network to save time.\nHowever, some contract applications integrate with contracts already deployed to a network.\nIf you want to test contracts deployed to specific networks and know your code coverage, run the following command with a RPC URL endpoint\nfor the ",(0,a.jsx)(n.code,{children:"--fork-url"})," flag:"]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"Do local unit testing first before forking a network to speed up testing time."})}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"shell",label:"Shell",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"forge coverage --fork-url $mainnetHTTPS_InfuraAPIKey --report lcov && genhtml lcov.info -o report --branch-coverage\n"})})})}),"\n",(0,a.jsx)(n.h2,{id:"fork-networks-using-anvil-and-metamask",children:"Fork Networks using Anvil and Metamask"}),"\n",(0,a.jsx)(n.p,{children:"Run:"}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"shell",label:"Shell",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"anvil --block-time 12 --fork-url $mainnetHTTPS_InfuraAPIKey\n"})})})}),"\n",(0,a.jsx)(n.p,{children:"Select a private key wallet that has funds into Metamask from the Anvil terminal."}),"\n",(0,a.jsx)(n.p,{children:"Connect to Anvil in Metamask with the following data:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"New RPC URL: http://127.0.0.1:8545\nChain ID: 31337\n"})}),"\n",(0,a.jsx)(n.h2,{id:"deploy-to-goerli-with-eip-1559-and-verify-with-etherscan",children:"Deploy to Goerli with EIP-1559 and verify with Etherscan"}),"\n",(0,a.jsxs)(n.p,{children:["You will need the following environmental variables setup to do this.\nYou can set these variables in your ",(0,a.jsx)(n.code,{children:".bashrc"})," file, or in a local ",(0,a.jsx)(n.code,{children:".env"})," folder:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"$goerliHTTPS_InfuraAPIKey\n$devTestnetPrivateKey\n$etherscanApiKey\n"})}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsx)(n.p,{children:"Using"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"forge create\n"})}),(0,a.jsx)(n.p,{children:"will use EIP-1559 for the deployment transaction by default."})]}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"shell",label:"Shell",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"forge create --rpc-url $goerliHTTPS_InfuraAPIKey --etherscan-api-key $etherscanApiKey --verify --private-key $devTestnetPrivateKey src Contract.sol:SimpleStorage\n"})})})}),"\n",(0,a.jsx)(n.h2,{id:"deploying-to-shardeum-liberty-with-legacy-transaction",children:"Deploying to Shardeum Liberty with Legacy Transaction"}),"\n",(0,a.jsx)(n.p,{children:"If the following Goerli deployment worked, the following Shardeum deployment should work as well."}),"\n",(0,a.jsxs)(n.admonition,{title:"Warning",type:"warning",children:[(0,a.jsx)(n.p,{children:"The"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"--legacy\n"})}),(0,a.jsx)(n.p,{children:"flag is used when deploying a smart contract using Legacy gas parameters for the transaction.\nThis is important, since Shardeum currently doesn't support EIP-1559.\nOtherwise, you will see the following error when attempting to deploy to Shardeum:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"EIP-1559 not activated\n"})})]}),"\n",(0,a.jsx)(n.admonition,{title:"Warning",type:"warning",children:(0,a.jsx)(n.p,{children:"The terminal might not notify you if the contract deployment worked.\nCheck the Shardeum Explorer after a transaction cycle to see if the contract deployed from the signer address from the private key used."})}),"\n",(0,a.jsx)(l.A,{children:(0,a.jsx)(o.A,{value:"shell",label:"Shell",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"forge create --legacy --rpc-url https://liberty20.shardeum.org/ --private-key $devTestnetPrivateKey src/Contract.sol:SimpleStorage\n"})})})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>l});t(6540);var r=t(8215);const a={tabItem:"tabItem_Ymn6"};var s=t(4848);function l(e){let{children:n,hidden:t,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,l),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>j});var r=t(6540),a=t(8215),s=t(3104),l=t(6347),o=t(205),i=t(7485),c=t(1682),d=t(679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=h(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,u]=m({queryString:t,groupId:a}),[g,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,d.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),v=(()=>{const e=c??g;return p({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{v&&i(v)}),[v]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var f=t(2303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function y(e){let{className:n,block:t,selectedValue:r,selectValue:l,tabValues:o}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=i.indexOf(n),a=o[t].value;a!==r&&(c(n),l(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>i.push(e),onKeyDown:u,onClick:d,...s,className:(0,a.A)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function w(e){let{lazy:n,children:t,selectedValue:s}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function b(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",v.tabList),children:[(0,x.jsx)(y,{...n,...e}),(0,x.jsx)(w,{...n,...e})]})}function j(e){const n=(0,f.A)();return(0,x.jsx)(b,{...e,children:u(e.children)},String(n))}},6722:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/foundryCoverageLCOV-83d481d4e2c7360389463abe63dc8fea.jpg"},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var r=t(6540);const a={},s=r.createContext(a);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);