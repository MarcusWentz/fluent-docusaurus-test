"use strict";(self.webpackChunkshardeum_docs=self.webpackChunkshardeum_docs||[]).push([[8437],{5888:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>f});const a=JSON.parse('{"id":"smartContracts/deploy/sameAddress","title":"Same Address Cross Chain","description":"Keep track of the same contracts cross chain easily","source":"@site/docs/smartContracts/deploy/sameAddress.md","sourceDirName":"smartContracts/deploy","slug":"/smartContracts/deploy/sameAddress","permalink":"/docusaurus-template/smartContracts/deploy/sameAddress","draft":false,"unlisted":false,"editUrl":"https://github.com/Shardeum/shardeum-docs/tree/master/docs/smartContracts/deploy/sameAddress.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Same Address Cross Chain","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Truffle","permalink":"/docusaurus-template/smartContracts/deploy/truffle"},"next":{"title":"ERC-20","permalink":"/docusaurus-template/smartContracts/tokens/ERC-20"}}');var r=n(4848),s=n(8453),o=n(1470),c=n(9365);const d={title:"Same Address Cross Chain",sidebar_position:5},i=void 0,l={},f=[{value:"Keep track of the same contracts cross chain easily",id:"keep-track-of-the-same-contracts-cross-chain-easily",level:2},{value:"Simple deployment with the same address cross chain",id:"simple-deployment-with-the-same-address-cross-chain",level:2},{value:"How are smart contract addresses determined?",id:"how-are-smart-contract-addresses-determined",level:2},{value:"How does CREATE determine smart contract addresses?",id:"how-does-create-determine-smart-contract-addresses",level:2},{value:"How does CREATE2 determine smart contract addresses?",id:"how-does-create2-determine-smart-contract-addresses",level:2},{value:"Can you deploy a contract to the same address twice?",id:"can-you-deploy-a-contract-to-the-same-address-twice",level:2},{value:"CREATE2 General Factory",id:"create2-general-factory",level:2},{value:"CREATE2 No Bytecode Function Input",id:"create2-no-bytecode-function-input",level:2}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"keep-track-of-the-same-contracts-cross-chain-easily",children:"Keep track of the same contracts cross chain easily"}),"\n",(0,r.jsx)(t.p,{children:"Having contracts deployed at the same address cross chain makes it very easy to find contracts for:"}),"\n",(0,r.jsx)(t.p,{children:"-users who want to quickly find the same contracts on other chains\n-developers maintaining the same contracts across different chains"}),"\n",(0,r.jsx)(t.h2,{id:"simple-deployment-with-the-same-address-cross-chain",children:"Simple deployment with the same address cross chain"}),"\n",(0,r.jsx)(t.p,{children:"Simple methods:"}),"\n",(0,r.jsx)(t.p,{children:"-a new wallet (nonce = 0 for all chains)\n-a wallet used for deploying contracts with the same cross chain nonce values"}),"\n",(0,r.jsx)(t.admonition,{title:"Caution",type:"caution",children:(0,r.jsx)(t.p,{children:"Using the same wallet again will require you to keep track of nonce values cross chain."})}),"\n",(0,r.jsx)(t.p,{children:"Alchemy recommends using a Hardhat nonce query script to quickly check a wallet's nonce values cross chain:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://docs.alchemy.com/docs/how-to-deploy-a-contract-to-the-same-address-on-multiple-networks#create-a-hardhat-task-to-query-the-nonce",children:"Create a Hardhat task to query the nonce"})}),"\n",(0,r.jsx)(t.h2,{id:"how-are-smart-contract-addresses-determined",children:"How are smart contract addresses determined?"}),"\n",(0,r.jsx)(t.p,{children:"Smart contracts deployment addresses can be created with either opcodes:"}),"\n",(0,r.jsx)(t.p,{children:"CREATE"}),"\n",(0,r.jsx)(t.p,{children:"or"}),"\n",(0,r.jsx)(t.p,{children:"CREATE2"}),"\n",(0,r.jsx)(t.h2,{id:"how-does-create-determine-smart-contract-addresses",children:"How does CREATE determine smart contract addresses?"}),"\n",(0,r.jsx)(t.p,{children:"CREATE deployment addresses depend on the sender's:"}),"\n",(0,r.jsx)(t.p,{children:"-address\n-nonce"}),"\n",(0,r.jsx)(t.h2,{id:"how-does-create2-determine-smart-contract-addresses",children:"How does CREATE2 determine smart contract addresses?"}),"\n",(0,r.jsx)(t.p,{children:"CREATE2 deployment addresses depend on:"}),"\n",(0,r.jsx)(t.p,{children:"-sender address (CREATE2 Factory is the sender in this context to execute the CREATE2 opcode)\n-salt\n-byteCode [creationCode since constructor input arguments can change the byteCode value]"}),"\n",(0,r.jsx)(t.p,{children:"For more info on the CREATE2 opcode:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://eips.ethereum.org/EIPS/eip-1014",children:"EIP-1014: Skinny CREATE2"})}),"\n",(0,r.jsx)(t.h2,{id:"can-you-deploy-a-contract-to-the-same-address-twice",children:"Can you deploy a contract to the same address twice?"}),"\n",(0,r.jsx)(t.p,{children:"Yes (for some contracts)."}),"\n",(0,r.jsx)(t.p,{children:"Do the following steps:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Create a contract with SELFDESTRUCT in a function only the owner can access to keep the contract secure."}),"\n"]}),"\n",(0,r.jsx)(t.admonition,{title:"WARNING",type:"warning",children:(0,r.jsxs)(t.p,{children:["Calling SELFDESTRUCT will delete all data in a contract! Be very careful using it.\nGoerli supports SELFDESTRUCT while Shardeum currently does not. SELFDESTRUCT might\nalso be deprecated with EIP-4758: ",(0,r.jsx)(t.a,{href:"https://eips.ethereum.org/EIPS/eip-4758",children:"https://eips.ethereum.org/EIPS/eip-4758"}),"."]})}),"\n",(0,r.jsxs)(t.ol,{start:"2",children:["\n",(0,r.jsx)(t.li,{children:"Deploy a contract using a CREATE2 Factory."}),"\n"]}),"\n",(0,r.jsx)(t.admonition,{title:"Caution",type:"caution",children:(0,r.jsx)(t.p,{children:"Remember this CREATE2 Factory address and the salt you used for the contract byteCode deployed."})}),"\n",(0,r.jsxs)(t.ol,{start:"3",children:["\n",(0,r.jsx)(t.li,{children:"Once the contract is deployed from the CREATE2 Factory, call SELFDESTRUCT."}),"\n"]}),"\n",(0,r.jsxs)(t.admonition,{title:"WARNING",type:"warning",children:[(0,r.jsx)(t.p,{children:"If you skip this step 3, you will see the following error on the Shardeum explorer:"}),(0,r.jsx)(t.p,{children:"create collison"}),(0,r.jsx)(t.p,{children:"since there is a contract at that address that hasn't been destroyed yet."})]}),"\n",(0,r.jsxs)(t.ol,{start:"4",children:["\n",(0,r.jsx)(t.li,{children:"Use the same CREATE2 Factory contract at the same address to deploy the contract with the same byteCode and salt."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Doing this will kill a contract at an address, then bring it back to life at the same address."}),"\n",(0,r.jsx)(t.p,{children:"Examples:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://goerli.etherscan.io/address/0x941642335762c6c9d35ef35bc6591c0c41d63a0c#code",children:"Contract deployed with CREATE that did a SELFDESTRUCT"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://goerli.etherscan.io/address/0xDf258F3868d67D802f2eb4FA7e64d61Ff96Fa72E#code",children:"Contract as a CREATE2 Factory"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://goerli.etherscan.io/address/0x1b6C44eD7fACDAF2bc8770E207d204bb2742f1d3",children:"Contract that was deployed with CREATE2, then called SELFDESTRUCT, then was brought back to life with the above CREATE2 Factory"})}),"\n",(0,r.jsx)(t.h2,{id:"create2-general-factory",children:"CREATE2 General Factory"}),"\n",(0,r.jsx)(t.p,{children:"This factory is useful for:"}),"\n",(0,r.jsx)(t.p,{children:"-saving gas:\n-factory can be used for other contracts since it takes raw creationCode\n-constructors cannot be payable (callvalue() [msg.value in assembly] set to 0, saves gas)\n-constructors cannot have arguments (memory variables not used saves gas)\n-creationCode == runtimeCode, since there are no constructor arguments changing the byteCode"}),"\n",(0,r.jsx)(o.A,{children:(0,r.jsx)(c.A,{value:"solidity",label:"Solidity",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nerror notOwner();\n\ncontract ContractToDeployMetamask { //Bytecode matches creation code with no constructor input arguments. Bytecode with tutorial address 0xc1202e7d42655F23097476f6D48006fE56d38d4f:\n                                    //0x60a060405234801561001057600080fd5b5073c1202e7d42655f23097476f6d48006fe56d38d4f73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516102c96100806000396000818160bb0152818160df015261016401526102c96000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806321cf146c14610051578063b4a99a4e1461006f578063f81bfa3f1461008d578063f965e32e14610097575b600080fd5b6100596100b3565b60405161006691906101be565b60405180910390f35b6100776100b9565b604051610084919061021a565b60405180910390f35b6100956100dd565b005b6100b160048036038101906100ac9190610266565b61019b565b005b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610162576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16ff5b8060008190555050565b6000819050919050565b6101b8816101a5565b82525050565b60006020820190506101d360008301846101af565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610204826101d9565b9050919050565b610214816101f9565b82525050565b600060208201905061022f600083018461020b565b92915050565b600080fd5b610243816101a5565b811461024e57600080fd5b50565b6000813590506102608161023a565b92915050565b60006020828403121561027c5761027b610235565b5b600061028a84828501610251565b9150509291505056fea2646970667358221220f13ed2f135ac0e33e3f372e325eaa526fa74eefc16e73495164e7b2549f0974464736f6c63430008110033\n    uint public storageSlot0;\n    address public immutable Owner;\n\n    constructor() { // Put your address as Owner instead of msg.sender because msg.sender will be another contract with CREATE2 salt deploy.\n        Owner = 0xc1202e7d42655F23097476f6D48006fE56d38d4f; // Metamask address for tutorial.\n    }                                                       // Do not do tx.origin because someone can front run you during contract creation!\n\n    function changeValue(uint updateStorageSlot) public {\n        storageSlot0 = updateStorageSlot;\n    }\n\n    function killThisContract() public { //After a contract is killed at an address, you can deploy another contract at that address.\n        if(msg.sender != Owner) { revert notOwner(); }\n        selfdestruct(payable(Owner)); //Deletes all data from this contract address. Address inside selfdestruct call gets all ether in the contract self destructing.\n    }                                \n\n}\n\ncontract Create2Factory {\n\n    event create2Event(address deployedAddressEvent);\n\n    function generalDeployCreate2(uint _salt, bytes memory creationCode) public { // BYTECODE NEEDS TO HAVE "0X" PREFIX TO BUILD RLP!\n        address deployedAddress;     // Salt example:         0x0000000000000000000000000000000000000000000000000000000000000000\n        assembly {                   // Another salt example: 0x123456789abcdef0000000000000000000000000000000000000000000000000\n            deployedAddress := create2(0, add(creationCode, 0x20), mload(creationCode), _salt) //callvalue() is the same as msg.value in assembly. callvalue() == 0 to save gas since the constructor and this create2 function are not payable.\n            if iszero(extcodesize(deployedAddress)) { //Note: constructor is not payable and takes no input variables (hardcoded in) to keep the creation code simple for this example.\n                revert(0, 0)                           \n            }\n        }\n        emit create2Event(deployedAddress);\n    }\n\n    function generalPrecomputeAddress(uint _salt, bytes memory creationCode) public view returns (address) { // BYTECODE NEEDS TO HAVE "0X" PREFIX TO BUILD RLP!\n        bytes32 hash = keccak256(abi.encodePacked(bytes1(0xff), address(this), _salt, keccak256(creationCode)));\n        return address(uint160(uint(hash)));\n    }\n\n}\n'})})})}),"\n",(0,r.jsx)(t.h2,{id:"create2-no-bytecode-function-input",children:"CREATE2 No Bytecode Function Input"}),"\n",(0,r.jsx)(t.p,{children:"This factory is useful for:"}),"\n",(0,r.jsx)(t.p,{children:"-building creationCode directly inside CREATE2 Factory functions with constructor argument values\n-keeping contract deployment simple without needing to deploy other contracts with general byteCode"}),"\n",(0,r.jsx)(o.A,{children:(0,r.jsx)(c.A,{value:"solidity",label:"Solidity",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nerror notOwner();\n\ncontract ContractToDeploy {\n\n    uint public storageSlot0;\n    address public immutable Owner;\n\n    constructor(address inputAddress) payable {\n        Owner = inputAddress; //Need to put address as input instead of msg.sender because msg.sender will be another contract with CREATE2 salt deploy.\n    }\n\n    function changeValue(uint updateStorageSlot) public {\n        storageSlot0 = updateStorageSlot;\n    }\n\n    function killThisContract() public { //After a contract is killed at an address, you can deploy another contract at that address.\n        if(msg.sender != Owner) { revert notOwner(); }\n        selfdestruct(payable(Owner)); //Deletes all data from this contract.\n    }\n\n}\n\ncontract Create2Factory { //Modified from: "Create2 | Solidity 0.8" by  Smart Contract Programmer https://www.youtube.com/watch?v=883-koWrsO4&ab_channel=SmartContractProgrammer\n\n    event create2Event(address deployedAddressEvent);\n\n    function create2DeployContract(bytes32 _salt, address ownerAddress) public payable {                              // Salt example:  0x0000000000000000000000000000000000000000000000000000000000000000\n        ContractToDeploy deployedAddress = new ContractToDeploy {value: msg.value, salt: _salt}(ownerAddress); // Another salt example: 0x123456789abcdef0000000000000000000000000000000000000000000000000\n        emit create2Event(address(deployedAddress));\n    }\n\n    function precomputeAddress(uint _salt, address ownerAddress) public view returns (address) {\n        bytes memory creationCodeValue = abi.encodePacked(type(ContractToDeploy).creationCode, abi.encode(ownerAddress));\n        bytes32 hash = keccak256(abi.encodePacked(bytes1(0xff), address(this), _salt, keccak256(creationCodeValue)));\n        return address(uint160(uint(hash)));\n    }\n\n}\n'})})})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>o});n(6540);var a=n(8215);const r={tabItem:"tabItem_Ymn6"};var s=n(4848);function o(e){let{children:t,hidden:n,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,o),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>w});var a=n(6540),r=n(8215),s=n(3104),o=n(6347),c=n(205),d=n(7485),i=n(1682),l=n(679);function f(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return f(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}(n);return function(e){const t=(0,i.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:n}=e;const r=(0,o.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,d.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=u(e),[o,d]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[i,f]=p({queryString:n,groupId:r}),[m,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,l.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),y=(()=>{const e=i??m;return h({value:e,tabValues:s})?e:null})();(0,c.A)((()=>{y&&d(y)}),[y]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);d(e),f(e),b(e)}),[f,b,s]),tabValues:s}}var b=n(2303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(4848);function E(e){let{className:t,block:n,selectedValue:a,selectValue:o,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:i}=(0,s.a_)(),l=e=>{const t=e.currentTarget,n=d.indexOf(t),r=c[n].value;r!==a&&(i(t),o(r))},f=e=>{let t=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:c.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>d.push(e),onKeyDown:f,onClick:l,...s,className:(0,r.A)("tabs__item",y.tabItem,s?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function C(e){let{lazy:t,children:n,selectedValue:s}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function g(e){const t=m(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",y.tabList),children:[(0,x.jsx)(E,{...t,...e}),(0,x.jsx)(C,{...t,...e})]})}function w(e){const t=(0,b.A)();return(0,x.jsx)(g,{...e,children:f(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var a=n(6540);const r={},s=a.createContext(r);function o(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);